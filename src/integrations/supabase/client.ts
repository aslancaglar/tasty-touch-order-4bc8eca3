
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://yifimiqeybttmbhuplaq.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlpZmltaXFleWJ0dG1iaHVwbGFxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ0MDYwNjYsImV4cCI6MjA1OTk4MjA2Nn0.LoMhbECAQxEuf3o35XbFmps5v1-iZ4JieXstrsmylYU";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Create a function to listen to payment updates
export const listenToPaymentUpdates = (paymentId: string, onUpdate: (status: string) => void) => {
  const channel = supabase
    .channel('payments-updates')
    .on(
      'postgres_changes',
      {
        event: 'UPDATE',
        schema: 'public',
        table: 'payments',
        filter: `id=eq.${paymentId}`
      },
      (payload) => {
        if (payload.new && 'status' in payload.new) {
          onUpdate(payload.new.status as string);
        }
      }
    )
    .subscribe();

  return () => {
    supabase.removeChannel(channel);
  };
};
